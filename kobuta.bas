10 ' **************************************************
20 ' 
30 '  KOBUTA RESCUE
40 '
50 '  PROGRAMMED BY ABURI6800 2023
60 '
70 ' **************************************************

100 SCREEN 1,2,0:WIDTH 32:COLOR 15,1,1:KEY OFF:R=RND(-TIME):DEFINT A-Z:DEFUSR=&H7E:A=USR(0)
110 DIM WX(3),WY(3),HX(9),HY(9),HV(9),HT(9),HP(9),HC(9),IX(3),IY(3),IV(3),B$(3),C(3),TI$(11)
130 GOSUB 4000
140 GOSUB 2000 ' TITLE
150 GOSUB 2500 ' GAME INIT
160 GOSUB 3000 ' SCREEN MAKE & DEMO

200 ' ***** MAIN *****
210 GOSUB 300
220 GOSUB 400
230 GOSUB 500
240 GOSUB 600
250 GOTO 210
 
300 ' ***** PLAYER CONTROL *****
310 LOCATE WX(W),WY(W):PRINT "hhh";:S=STICK(0)+STICK(1)+1
320 ON S GOTO 370,330,370,350,370,340,370,360,370
330 IF W>1 THEN GOSUB 380:W=W-2:RETURN ELSE RETURN
340 IF W<2 THEN GOSUB 380:W=W+2:RETURN ELSE RETURN
350 IF W=0 OR W=2 THEN GOSUB 380:W=W+1:RETURN ELSE RETURN
360 IF W=1 OR W=3 THEN GOSUB 380:W=W-1
370 RETURN
380 LOCATE WX(W),WY(W):PRINT "   ";:RETURN

400 ' ***** HUMAN GENERATE *****
410 R=RND(1)*20:IF R>LV THEN RETURN
420 J=-1:FOR I=0 TO 9:IF HX(I)=-1 THEN J=I:I=9:NEXT I ELSE NEXT I
430 IF J=-1 THEN RETURN
440 R=RND(1)*4:IF C(R)=2 THEN RETURN ELSE C(R)=C(R)+1:HX(J)=IX(R):HY(J)=IY(R):HV(J)=IV(R):HC(J)=R
450 HP(J)=0
460 HT(J)=RND(1)*2
470 RETURN

500 ' ***** HUMAN MOVE *****
510 FOR I=0 TO 9:IF HX(I)=-1 THEN 550
520 HX(I)=HX(I)+HV(I):IF (HV(I)=-1 AND HX(I)<19) OR (HV(I)=1 AND HX(I)>12) THEN HX(I)=-1:HY(I)=24:C(HC(I))=C(HC(I))-1
530 PUT SPRITE I*2  ,(HX(I)*8,HY(I)*8-1),11        ,(HV(I)*3+3)+HP(I)*3
540 PUT SPRITE I*2+1,(HX(I)*8,HY(I)*8-1), 9-HT(I)*4,(HV(I)*3+4)+HP(I)*3+HT(I)
550 HP(I)=HP(I) XOR 1
560 NEXT I:RETURN

600 ' ***** LEVEL CONTROL *****
610 TI=TI+1:IF TI>100 THEN TI=0:LV=LV+1:IF LV>5 THEN LV=5
620 LOCATE 0,20:PRINT TI;:RETURN

1000 ' ***** ALL SPRITE ERASE *****
1010 FOR I=0 TO 18:PUT SPRITE I,(0,191),0,0:NEXT I:RETURN

2000 ' ***** TITLE *****
2010 GOSUB 3500
2020 FOR I=0 TO 3:HX(I)=0:HY(I)=223:NEXT I:C=0
2030 FOR I=0 TO 5:LOCATE 10+I*2,7:PRINT TI$(I);:NEXT I
2040 FOR I=0 TO 5:LOCATE 10+I*2,10:PRINT TI$(I+6);:NEXT I
2050 LOCATE 8,16:PRINT ":ABURI GAMES 2023";
2060 LOCATE 7,19:PRINT "ALL RIGHTS RESERVED";
2065 '
2070 IF HY(C)<223 THEN 2120
2080 R=RND(1)*3:IF R=0 THEN 2140 : 0=none, 1=right move,2=left move
2090 R=R-1:HX(C)=(R*30)*8:HY(C)=(5+(C MOD 2)*7)*8-1:HP(C)=0:HV(C)=R
2100 PUT SPRITE C*2  ,(HX(C),HY(C)),10,(HV(C)*4)+(HP(C)*2)
2110 PUT SPRITE C*2+1,(HX(C),HY(C)),11,(HV(C)*4)+(HP(C)*2)+1:GOTO 2160
2115 '
2120 IF HV(C) THEN HX(C)=HX(C)-8 ELSE HX(C)=HX(C)+8
2130 HP(C)=HP(C) XOR 1:IF HX(C)>240 OR HX(C)<0 THEN HX(C)=0:HY(C)=223
2135 '
2140 S0=&H1B00+(C*4*2):S1=S0+4:P=((HV(C)*4)+(HP(C)*2)):P0=P*4:P1=(P+1)*4
2145 VPOKE S0,HY(C):VPOKE S0+1,HX(C):VPOKE S0+2,P0
2150 VPOKE S1,HY(C):VPOKE S1+1,HX(C):VPOKE S1+2,P1
2160 C=C+1:IF C>3 THEN C=0
2170 IF STRIG(0)+STRIG(1)=0 THEN 2070 ELSE RETURN

2500 ' ***** GAME INIT *****
2510 W=0:LV=1:TI=0
2520 FOR I=0 TO 9:HX(I)=0:HY(I)=223:NEXT I
2530 FOR I=0 TO 3:C(I)=0:NEXT I
2540 RETURN 

3000 ' ***** SCREEN MAKE *****
3010 CLS
3020 LOCATE 4, 0:PRINT "SCORE           MISS"
3030 LOCATE 0, 9:PRINT "ffffff   ffff                   ";
3040 LOCATE 0,10:PRINT "gggggg   gggg                   ";
3050 LOCATE 0,11:PRINT "                    fff   ffffff";
3060 LOCATE 0,12:PRINT "                    ggg   gggggg";
3070 LOCATE 0,17:PRINT "fffffff   fff                   ";
3080 LOCATE 0,18:PRINT "ggggggg   ggg                   ";
3090 LOCATE 0,19:PRINT "                    ffff   fffff";
3100 LOCATE 0,20:PRINT "                    gggg   ggggg";
3110 LOCATE 9,2:PRINT CHR$(119);CHR$(120);CHR$(121);CHR$(122);CHR$(108);CHR$(108);CHR$(108);CHR$(108);CHR$(108);CHR$(108);CHR$(108);CHR$(115);CHR$(116);CHR$(117);CHR$(118);
3120 LOCATE 9,3:PRINT CHR$(151);CHR$(152);CHR$(153);CHR$(32);CHR$(140);CHR$(141);CHR$(142);CHR$(143);CHR$(144);CHR$(145);CHR$(146);CHR$(32);CHR$(148);CHR$(149);CHR$(150);
3130 LOCATE 9,4:PRINT CHR$(183);CHR$(184);CHR$(185);CHR$(186);CHR$(172);CHR$(173);CHR$(174);CHR$(175);CHR$(176);CHR$(177);CHR$(178);CHR$(179);CHR$(180);CHR$(181);CHR$(182);
3140 LOCATE 9,5:PRINT CHR$(215);CHR$(32);CHR$(217);CHR$(218);CHR$(204);CHR$(204);CHR$(204);CHR$(204);CHR$(204);CHR$(204);CHR$(204);CHR$(211);CHR$(212);CHR$(32);CHR$(214);
3150 RETURN

3500 ' ***** COMMON SCREEN MAKE *****
3510 CLS:GOSUB 1000
3520 LOCATE 4, 0:PRINT "SCORE           MISS"
3530 FOR I=0 TO 15:A=I*2
3540 VPOKE &H1820+A, 96:VPOKE &H1821+A, 96
3550 VPOKE &H1840+A, 97:VPOKE &H1841+A, 98
3560 VPOKE &H1860+A, 99:VPOKE &H1861+A,100
3570 VPOKE &H1AA0+A, 96:VPOKE &H1AA1+A, 96
3580 VPOKE &H1AC0+A, 96:VPOKE &H1AC1+A, 96
3590 VPOKE &H1AE0+A, 97:VPOKE &H1AE1+A, 98
3600 NEXT I:RETURN

4000 ' ***** INIT *****
4010 LOCATE 0,0:PRINT "WAIT A MINUTE."
4030 ' -- LOAD PCG
4040 READ C:IF C=999 THEN 4100 ELSE AD=C*8:PS=1
4050 READ PG$,CT$:FOR I=0 TO 7:PG=VAL("&H"+MID$(PG$,PS,2)):CT=VAL("&H"+MID$(CT$,PS,2))
4070 VPOKE AD,PG:VPOKE &H800+AD,PG:VPOKE &H1000+AD,PG
4080 VPOKE &H2000+AD,CT:VPOKE &H2800+AD,CT:VPOKE &H3000+AD,CT
4090 AD=AD+1:PS=PS+2:NEXT I:GOTO 4040
4100 ' -- LOAD SPRITES
4110 S=BASE(9)
4120 READ R$:IF R$="*" THEN 4130 ELSE VPOKE S,VAL("&H"+R$):S=S+1:GOTO 4120
4130 ' -- OTHER DATAS
4140 FOR I=0 TO 3:READ WX(I),WY(I):NEXT
4150 FOR I=0 TO 3:READ IX(I),IY(I),IV(I):NEXT I
4160 C$=CHR$(31)+CHR$(29)+CHR$(29)
4170 FOR I=0 TO 11:READ A,B,C,D:TI$(I)=CHR$(A)+CHR$(B)+C$+CHR$(C)+CHR$(D):NEXT I
4180 RETURN

5500 ' ***** PCG *****
5510 DATA 032, 0000000000000000, 0010101010101010
5520 DATA 033, 0018181000000000, f0f0f0b0b0a0a0a0
5530 DATA 034, 006c6c4800000000, f0f0f0b0b0a0a0a0
5540 DATA 035, 00187cd87c1e7c18, f0f0f0b0b0a0a0a0
5550 DATA 036, 00e2a4e8102e4a8e, f0f0f0b0b0a0a0a0
5560 DATA 037, 0070c8f052cacc7a, f0f0f0b0b0a0a0a0
5570 DATA 038, 0018181000000000, f0f0f0b0b0a0a0a0
5580 DATA 039, 0018306060603018, f0f0f0b0b0a0a0a0
5590 DATA 040, 0030180c0c0c1830, f0f0f0b0b0a0a0a0
5600 DATA 048, 007ce6eaf2e2e27c, f0f0f0b0b0a0a0a0
5610 DATA 049, 001878383838387c, f0f0f0b0b0a0a0a0
5620 DATA 050, 007cce0e3c70e0fe, f0f0f0b0b0a0a0a0
5630 DATA 051, 007cce0e3c0ece7c, f0f0f0b0b0a0a0a0
5640 DATA 052, 003c5c9c9cfe1c1c, f0f0f0b0b0a0a0a0
5650 DATA 053, 00fce0e0fc0e0efc, f0f0f0b0b0a0a0a0
5660 DATA 054, 007ce0e0fccece7c, f0f0f0b0b0a0a0a0
5670 DATA 055, 00fe0e1c1c383838, f0f0f0b0b0a0a0a0
5680 DATA 056, 007ce6e67ce6e67c, f0f0f0b0b0a0a0a0
5690 DATA 057, 007ce6e67e0e0e7c, f0f0f0b0b0a0a0a0
5700 DATA 058, 007c82baa2ba827c, 9090908080606060
5710 DATA 065, 007ce6e6fee6e6e6, 9090908080606060
5720 DATA 066, 00fce6e6fce6e6fc, 9090908080606060
5730 DATA 067, 007ce6e0e0e0e67c, 9090908080606060
5740 DATA 068, 00f8e4e6e6e6e4f8, 9090908080606060
5750 DATA 069, 00fee0e0fce0e0fe, 9090908080606060
5760 DATA 070, 00fee0e0fce0e0e0, 9090908080606060
5770 DATA 071, 007ce6e0eee6e67c, 9090908080606060
5780 DATA 072, 00e6e6e6fee6e6e6, 9090908080606060
5790 DATA 073, 0038383838383838, 9090908080606060
5800 DATA 074, 007e1c1c1c9c9c78, 9090908080606060
5810 DATA 075, 00e6ecf8fce6e6e6, 9090908080606060
5820 DATA 076, 00e0e0e0e0e0e0fe, 9090908080606060
5830 DATA 077, 00e2f6eaeaeae2e2, 9090908080606060
5840 DATA 078, 00e2f2faeee6e2e2, 9090908080606060
5850 DATA 079, 007ce6e6e6e6e67c, 9090908080606060
5460 DATA 080, 00fce6e6e6fce0e0, 9090908080606060
5870 DATA 081, 007ce6e6e6eee47a, 9090908080606060
5880 DATA 082, 00fce6e6e6fce6e6, 9090908080606060
5890 DATA 083, 007ce6e07c06e67c, 9090908080606060
5900 DATA 084, 00fe383838383838, 9090908080606060
5910 DATA 085, 00e6e6e6e6e6e67c, 9090908080606060
5920 DATA 086, 00e6e6e6e6e67438, 9090908080606060
5930 DATA 087, 00e2e2eaeaeaf6e2, 9090908080606060
5940 DATA 088, 00e6e6743874e6e6, 9090908080606060
5950 DATA 089, 00cece6e3e1c3870, 9090908080606060
5960 DATA 090, 00fe0e1c3870e0fe, 9090908080606060
5970 DATA 096, 6349d594ac391382, c0c030c030c030c0
5980 DATA 097, 130b0f0707070707, 8090809080908090
5990 DATA 098, e4e4a8d0b0e0a0c0, 6080608060806080
6000 DATA 099, 0f0f0f1f1f1f36ec, 8090809080908090
6010 DATA 100, a0d0b0f07868aca6, 6080608060806080
6020 DATA 102, 00118855aaffffff, c3c3c3c3c3c3c3c3
6030 DATA 103, ee77aa5588220000, c5c5c5c5c5c5c5c5
6040 DATA 104, ff00ffff55aa0000, 7070707070707070
6050 DATA 105, dddddd0077777700, 9e8e6e9e9e8e6e9e
6060 DATA 106, c3c7cf09696f6f0f, 9e9e9e8e8e8e8e9e
6070 DATA 107, cde5f5f0f7f7f7f0, 9e9e9e8e8e8e8e9e
6080 DATA 108, 1f1f1f00f7f7f700, 8080908080809000
6090 DATA 109, 7f7f7f00f7f7f700, 8080908080809000
6100 DATA 110, 78787800efefef00, 6060908060609080
6110 DATA 111, 7eff81818181ff7e, 9e8585858585958e
6120 DATA 112, 7a7c7a7c7a7c7a7c, e0e0e0e0e0e0e0e0
6130 DATA 113, 00000000ffffff02, 00e0e0e0e0e0e0e0
6140 DATA 114, 70f8f8f870000606, e0e0e0e0e0e0e0e0
6150 DATA 115, 00081c0800400000, e0e0e0e0e0e0e0e0
6160 DATA 128, 003c666666666666, b0b0b0b0b0b0b0b0
6170 DATA 129, 003c66c68c183060, b0b0b0b0b0b0b0b0
6180 DATA 130, 000f383063666666, b0b0b0b0b0b0b0b0
6190 DATA 131, 00f01c0cc6666666, b0b0b0b0b0b0b0b0
6200 DATA 132, 003f606067666760, b0b0b0b0b0b0b0b0
6210 DATA 133, 00f80c06c666c60c, b0b0b0b0b0b0b0b0
6220 DATA 134, 003f60603e060606, b0b0b0b0b0b0b0b0
6230 DATA 135, 00fc06067c606060, b0b0b0b0b0b0b0b0
6240 DATA 136, 000f383063666666, b0b0b0b0b0b0b0b0
6250 DATA 137, 00f01c0cc6666666, b0b0b0b0b0b0b0b0
6260 DATA 138, 003f606067666666, b0b0b0b0b0b0b0b0
6270 DATA 139, 00fc0606fc00f80c, b0b0b0b0b0b0b0b0
6280 DATA 140, 001f306063676330, b0b0b0b0b0b0b0b0
6290 DATA 141, 00fc0606fc00f80c, b0b0b0b0b0b0b0b0
6300 DATA 142, 00f01c0cc666663c, b0b0b0b0b0b0b0b0
6310 DATA 143, 003c666667676660, b0b0b0b0b0b0b0b0
6320 DATA 160, 6666666666663c00, b0b0b0b0b0b0b0b0
6330 DATA 161, 6030188cc6663c00, b0b0b0b0b0b0b0b0
6340 DATA 162, 6666666330380f00, b0b0b0b0b0b0b0b0
6350 DATA 163, 666666c60c1cf000, b0b0b0b0b0b0b0b0
6360 DATA 164, 6067666760603f00, b0b0b0b0b0b0b0b0
6370 DATA 165, 0cc666c6060cf800, b0b0b0b0b0b0b0b0
6380 DATA 166, 0606060606060300, b0b0b0b0b0b0b0b0
6390 DATA 167, 606060606060c000, b0b0b0b0b0b0b0b0
6400 DATA 168, 6760606766663c00, b0b0b0b0b0b0b0b0
6410 DATA 169, e60606e666663c00, b0b0b0b0b0b0b0b0
6420 DATA 170, c60c18cc66663c00, b0b0b0b0b0b0b0b0
6430 DATA 171, 0cf800fc0606fc00, b0b0b0b0b0b0b0b0
6440 DATA 172, 301f003f60603f00, b0b0b0b0b0b0b0b0
6450 DATA 173, 0cc6e6c6060cf800, b0b0b0b0b0b0b0b0
6460 DATA 174, 3c6666c60c1cf000, b0b0b0b0b0b0b0b0
6470 DATA 175, 6066676766663c00, b0b0b0b0b0b0b0b0
6480 DATA 999

10000 ' ***** SPRITE *****
10010 ' right pig 1 (0=10, 1=11)
10020 DATA 00,00,00,00,00,03,06,06,03,00,18,18,0C,02,0D,0E
10030 DATA 00,00,00,00,00,E0,B0,B0,E0,00,00,00,00,00,80,00
10040 DATA 30,18,1F,3B,3B,3C,38,38,1C,0F,07,67,63,01,00,00
10050 DATA 80,80,C0,60,60,00,00,00,0C,EC,F0,E0,D8,D8,00,00
10060 ' right pig 2 (2=10, 3=11)
10070 DATA 00,00,00,00,00,00,01,03,03,01,00,08,08,0C,07,00
10080 DATA 00,00,00,00,00,00,F0,58,58,F0,00,00,00,00,80,00
10090 DATA 00,0C,0C,0F,1D,1D,1E,1C,1C,0E,07,07,07,23,10,01
10100 DATA 00,20,20,E0,B0,B0,00,00,00,00,F0,F8,F8,F0,60,C0
10110 ' left pig 1 (4=10, 5=11)
10120 DATA 00,00,00,00,00,07,0D,0D,07,00,00,00,00,00,01,00
10130 DATA 00,00,00,00,00,C0,60,60,C0,00,18,18,30,40,B0,70
10140 DATA 01,01,03,06,06,00,00,00,30,37,0F,07,1B,1B,00,00
10150 DATA 0C,18,F8,DC,DC,3C,1C,1C,38,F0,E0,E6,C6,80,00,00
10160 ' left pig 2 (6=10, 7=11)
10170 DATA 00,00,00,00,00,00,0F,1A,1A,0F,00,00,00,00,01,00
10180 DATA 00,00,00,00,00,00,80,C0,C0,80,00,10,10,30,E0,00
10190 DATA 00,04,04,07,0D,0D,00,00,00,00,0F,1F,1F,0F,06,03
10200 DATA 00,30,30,F0,B8,B8,78,38,38,70,E0,E0,E0,C4,08,80
10210 ' right wolf 1 (8=5, 9=14)
10220 DATA 04,02,07,06,0D,0C,06,07,03,47,CF,6F,3E,18,7C,70
10230 DATA 40,80,E0,40,A0,A4,00,00,C0,F8,DC,64,20,00,00,00
10240 DATA 00,04,00,01,02,03,01,40,C0,80,00,00,01,07,00,00
10250 DATA 00,40,00,A0,40,58,FC,F0,3C,00,20,80,C0,00,00,00
10260 ' right wolf 2 (10=5, 11=4) 
10270 DATA 00,00,04,02,07,07,4C,4C,66,67,3F,3F,1C,0E,07,07
10280 DATA 00,00,20,40,F0,20,D0,50,02,00,C0,40,00,20,60,40
10290 DATA 00,00,00,04,00,20,23,23,01,00,00,00,03,01,00,00
10300 DATA 00,00,00,20,00,D0,20,A0,FC,FE,3C,80,C0,C0,00,00
10310 ' left wolf 1 (12=5, 13=14) 
10320 DATA 02,01,07,02,05,25,00,00,03,1F,3B,26,04,00,00,00
10330 DATA 20,40,E0,60,B0,30,60,E0,C0,E2,F3,F6,7C,18,3E,0E
10340 DATA 00,02,00,05,02,1A,3F,0F,3C,00,04,01,03,00,00,00
10350 DATA 00,20,00,80,40,C0,80,02,03,01,00,00,80,E0,00,00
10360 ' left wolf 2 (14=5, 15=14) 
10370 DATA 00,00,04,02,0F,04,0B,0A,40,00,03,02,00,04,06,02
10380 DATA 00,00,20,40,E0,E0,32,32,66,E6,FC,FC,38,70,E0,E0
10390 DATA 00,00,00,04,00,0B,04,05,3F,7F,3C,01,03,03,00,00
10400 DATA 00,00,00,20,00,04,C4,C4,80,00,00,00,C0,80,00,00
10410 ' fall pig (16=10, 17=11)
10420 DATA 00,01,00,00,00,00,00,07,0D,0D,07,00,00,00,00,00
10430 DATA 30,B0,40,30,18,18,00,C0,60,60,C0,00,00,00,00,00
10440 DATA 00,00,1B,1B,07,0F,37,30,00,00,00,06,06,03,01,01
10450 DATA 00,00,80,C0,E0,E6,F6,38,1C,1C,3C,DC,DC,F8,18,0C
10460 ' fall wolf (18=5, 19=14) 
10470 DATA 00,03,1F,FF,BC,EC,1F,7C,AC,59,14,12,19,0F,04,08
10480 DATA E0,C0,F0,FE,7A,6E,F0,78,54,28,50,90,20,E0,40,20
10490 DATA 00,00,00,00,43,03,00,03,43,06,0B,0D,06,00,08,00
10500 DATA 18,0C,00,00,84,80,00,80,88,C0,A0,60,C0,00,20,00
10510 DATA *

11000 ' ***** DATAS *****
11010 DATA 6,9,23,11,7,17,24,19
11020 DATA 0,7,+1,32,9,-1,0,15,+1,32,17,-1

11100 ' ***** TITLE PATTERN DATA *****
11110 DATA 143, 129, 175, 161 :'0:K
11120 DATA 130, 131, 162, 163 :'1:O
11130 DATA 132, 133, 164, 165 :'2:B
11140 DATA 128, 128, 162, 163 :'3:U
11150 DATA 134, 135, 166, 167 :'4:T
11160 DATA 136, 137, 168, 169 :'5:A
11170 DATA 138, 131, 168, 170 :'6:R
11180 DATA 132, 139, 164, 171 :'7:E
11190 DATA 140, 141, 172, 173 :'8:S
11200 DATA 130, 142, 162, 174 :'9:C
11210 DATA 128, 128, 162, 163 :'10:U
11220 DATA 132, 139, 164, 171 :'11:E
